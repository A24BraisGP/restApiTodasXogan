# Generated by Django 5.2.1 on 2025-06-13 13:45

import datetime
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('restApi', '0007_alter_usuario_imaxe_user_alter_videoxogo_caratula'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='usuario',
            options={'verbose_name': 'Usuario', 'verbose_name_plural': 'Usuarios'},
        ),
        migrations.RemoveField(
            model_name='usuario',
            name='contrasinal',
        ),
        migrations.AddField(
            model_name='usuario',
            name='date_joined',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Indica se o usuario está activo.'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Indica se o usuario pode acceder á área de administración.'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='password',
            field=models.CharField(default=datetime.datetime(2025, 6, 13, 13, 45, 8, 347043), max_length=128, verbose_name='password'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='admin',
            field=models.BooleanField(default=False, help_text='Indica se o usuario ten rol de administrador personalizado.'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='email',
            field=models.EmailField(help_text='Enderezo de correo electrónico único.', max_length=250, unique=True),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='favoritos',
            field=models.ManyToManyField(blank=True, related_name='usuarios_favoritos', through='restApi.Favorito', to='restApi.videoxogo'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='imaxe_user',
            field=models.ImageField(blank=True, help_text='Imaxe de perfil do usuario.', null=True, upload_to='users/'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='nome',
            field=models.CharField(help_text='Nome de usuario único.', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='preferencias',
            field=models.ManyToManyField(blank=True, related_name='usuario_preferencias', through='restApi.PreferenciasAccesibilidade', to='restApi.accesibilidade'),
        ),
    ]
